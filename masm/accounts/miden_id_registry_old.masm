use.miden::account
use.miden::note
use.std::sys

const.ALREADY_INITIALIZED="Already initialized"
# Storage
# SLOT[0] - initialized flag
# SLOT[1] - Owner_prefix
# SLOT[2] - Owner_suffix
# SLOT[3] - Fee
# SLOT[10] - map(name->owner)
# SLOT[11] - map(owner->name)

# Not: Stack orneklerinde [felt, VALUE], kucuk harfle yazilanlar tek felt demek buyuk harf WORD yani 4 felt

# Inputs
# [TREASURY, FEE] -> total 8 elements, 2 words
export.init
    exec._assert_initialized
    # [TREASURY, FEE]
    exec.note::get_sender # Note da degilse context revert atiyor. Ama yinede 0,0 donerse check etmek  lazim
    debug.stack.8
    
    # Set initialized
    push.0.0.0.1 push.0 
    # [1, 0, T, F]
    exec.account::set_item dropw
    # [T, F]

    push.1 exec.account::set_item dropw
    # [FEE]
    push.2 exec.account::set_item dropw
end

export.get_addr_by_name
    # Args: NAME_WORD
    exec._get_addr_by_name
end

export.get_name_by_addr
    # Args: ADDR
    exec._get_name_by_addr
end

# TODO: Set this function proc instead of public
export.set
    # Expects: [ADDR, NAME, NAME, ADDR]
    #           first pair for name->addr, second pair for addr->name
    exec._set_addr_by_name
    # => [NAME, ADDR]
    exec._set_name_by_addr
    # => []
    exec.sys::truncate_stack
end

# Input: []
# Output: []
proc._assert_only_owner
    # TODO
    exec.note::get_sender
    # [addr_prefix, addr_suffix, ...]
    
    nop
end

# No effect on stack
proc._assert_initialized
    push.0
    # [0]
    exec.account::get_item
    # [VALUE]
    assertz.err=ALREADY_INITIALIZED
    # []
end


proc._get_addr_by_name
    # Args: Name
    push.10
    # => [index]
    exec.account::get_map_item
    # => [VALUE]
end

proc._get_name_by_addr
    push.11
    # => [index]
    exec.account::get_map_item
    # => [VALUE]
end

proc._set_addr_by_name
    # Stack: [ADDR, NAME]
    # Reorder to [NAME, ADDR]
    swapw
    # Writes NAME -> ADDR to map at slot 10
    push.10
    # After push: [10, NAME, ADDR] => [index, key, VALUE]
    exec.account::set_map_item
    # => []
end

proc._set_name_by_addr
    # Stack: [NAME, ADDR]
    # Reorder to [ADDR, NAME]
    swapw
    # Writes ADDR -> NAME to map at slot 11
    push.11
    # After push: [11, ADDR, NAME] => [index, key, value]
    exec.account::set_map_item
    # => []
end
